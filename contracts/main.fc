#include "imports/stdlib.fc";

;;;; A Handler for an Internal Message
;; msg_value: how much TON coins is received with this message.
;; in_msg: complete message that we received. it includes information like who sent it, what are the flags that are included, etc...
;; in_msg_body: the readable part of the message. it is slice because it is a part of the cell. It has the address from which we will start reading this slice (this part of the cell)
;; both in_msg_body and msg_value are included in in_msg (the second parameter). However they are added as parameters for simplicity

;; a cell is a sequence of bits. It needs to be parsed.

() recv_internal(int msg_value, cell in_msg, slice in_msg_body) impure {
    ;; to read the content of `in_msg`, we need to start parsing the cell `in_msg` itself, reading it slice by slice. each slice represents some information
    slice cs = in_msg.begin_parse() ; ;; now the slice `cs` is pointing to the beginning of the cell `in_msg`
    int flags = cs~load_uint(4) ; ;; reading the first 4 bits, as an integer. the first 4 bits are the flags that the sender used when they sent a message to the contract.
    slice sender_address = cs~load_msg_addr(); ;; the poniter has moved. Now we are reading the address that sent of this message

    set_data(begin_cell().store_slice(sender_address).end_cell());
}

slice get__latest_sender() method_id {
    slice ds = get_data().begin_parse();
    return ds~load_msg_addr();
}